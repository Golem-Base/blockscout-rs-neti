syntax = "proto3";

package blockscout.golemBaseIndexer.v1;

option go_package = "github.com/Golem-Base/blockscout-rs-neti/golem-base-indexer";


service GolemBaseIndexerService {
  rpc GetEntity(GetEntityRequest) returns (FullEntity);
  rpc GetEntityHistory(GetEntityHistoryRequest) returns (GetEntityHistoryResponse);
  rpc GetOperation(GetOperationRequest) returns (EntityHistoryEntry);
  rpc ListEntities(ListEntitiesRequest) returns (ListEntitiesResponse);
  rpc ListOperations(ListOperationsRequest) returns (ListOperationsResponse);
  rpc CountEntities(CountEntitiesRequest) returns (CountEntitiesResponse);
  rpc CountOperations(CountOperationsRequest) returns (CountOperationsResponse);
  rpc AddressStats(AddressStatsRequest) returns (AddressStatsResponse);
  rpc BlockStats(BlockStatsRequest) returns (BlockStatsResponse);
  rpc ListCustomContractTransactions(ListCustomContractTransactionsRequest) returns (ListCustomContractTransactionsResponse);
  rpc AddressLeaderboardRanks(AddressLeaderboardRanksRequest) returns (AddressLeaderboardRanksResponse);

  // Leaderboards
  rpc LeaderboardTopAccounts(PaginationRequest) returns (LeaderboardTopAccountsResponse);
  rpc LeaderboardBiggestSpenders(PaginationRequest) returns (LeaderboardBiggestSpendersResponse);
  rpc LeaderboardEntitiesCreated(PaginationRequest) returns (LeaderboardEntitiesCreatedResponse);
  rpc LeaderboardEntitiesOwned(PaginationRequest) returns (LeaderboardEntitiesOwnedResponse);
  rpc LeaderboardDataOwned(PaginationRequest) returns (LeaderboardDataOwnedResponse);
  rpc LeaderboardLargestEntities(PaginationRequest) returns (LeaderboardLargestEntitiesResponse);
  rpc LeaderboardEffectivelyLargestEntities(PaginationRequest) returns (LeaderboardEffectivelyLargestEntitiesResponse);
  rpc LeaderboardEntitiesByBtl(PaginationRequest) returns (LeaderboardEntitiesByBtlResponse);

  // Charts
  rpc ChartDataUsage(ChartDataUsageRequest) returns (ChartResponse);
  rpc ChartStorageForecast(ChartStorageForecastRequest) returns (ChartResponse);
  rpc GetEntityDataHistogram(Empty) returns (GetEntityDataHistogramResponse); // FIXME naming
  rpc ChartOperationCount(ChartOperationCountRequest) returns (ChartOperationCountResponse);
}

message PaginationRequest {
  optional uint64 page = 1;
  optional uint64 page_size = 2;
}

message Empty {}

message AddressStatsRequest {
  string address = 1;
}

message AddressStatsResponse {
  uint64 created_entities = 1;
  uint64 active_entities = 2;
  uint64 size_of_active_entities = 3;
  uint64 total_transactions = 4;
  uint64 failed_transactions = 5;
  CountOperationsResponse operations_counts = 6;
  optional string first_seen_timestamp = 7;
  optional string last_seen_timestamp = 8;
  optional uint64 first_seen_block = 9;
  optional uint64 last_seen_block = 10;
}

message GetEntityRequest {
  string key = 1;
}

message GetEntityHistoryRequest {
  string key = 1;
  optional uint64 page = 2;
  optional uint64 page_size = 3;
}

message GetOperationRequest {
  string tx_hash = 1;
  uint64 op_index = 2;
}

message EntityStatusFilter {
  enum EntityStatusFilter {
    ACTIVE = 0;
    DELETED = 1;
    EXPIRED = 2;
    ALL = 3;
  }
}

message ListEntitiesRequest {
  optional uint64 page = 1;
  optional uint64 page_size = 2;
  EntityStatusFilter.EntityStatusFilter status = 3;
  optional string string_annotation_key = 4;
  optional string string_annotation_value = 5;
  optional string numeric_annotation_key = 6;
  optional string numeric_annotation_value = 7;
  optional string owner = 8;
}

message ListEntitiesResponse {
  repeated Entity items = 1;
  Pagination pagination = 2;
}

message ListOperationsRequest {
  OperationType operation = 1;
  optional uint64 page = 2;
  optional uint64 page_size = 3;
  optional string block_number_or_hash = 4;
  optional string transaction_hash = 5;
  optional string sender = 6;
  optional string entity_key = 7;
}

message ListOperationsResponse {
  repeated Operation items = 1;
  Pagination pagination = 2;
}

message Pagination {
  uint64 page = 1;
  uint64 page_size = 2;
  uint64 total_pages = 3;
  uint64 total_items = 4;
}

message CountOperationsRequest {
  optional string block_number_or_hash = 1;
  optional string transaction_hash = 2;
  optional string sender = 3;
  optional string entity_key = 4;
}

message CountOperationsResponse {
  uint64 create_count = 1;
  uint64 update_count = 2;
  uint64 delete_count = 3;
  uint64 extend_count = 4;
}

message CountEntitiesRequest {
  EntityStatusFilter.EntityStatusFilter status = 1;
  optional string string_annotation_key = 2;
  optional string string_annotation_value = 3;
  optional string numeric_annotation_key = 4;
  optional string numeric_annotation_value = 5;
  optional string owner = 6;
}

message CountEntitiesResponse {
  uint64 count = 1;
}

enum EntityStatus {
  ACTIVE = 0;
  DELETED = 1;
  EXPIRED = 2;
}

message Entity {
  string key = 1;
  optional string data = 2;
  EntityStatus status = 3;

  optional string created_at_tx_hash = 4;
  string last_updated_at_tx_hash = 5;
  optional uint64 expires_at_block_number = 6;
}

message EntityWithExpTimestamp {
  string key = 1;
  optional string data = 2;
  EntityStatus status = 3;
  optional string created_at_tx_hash = 4;
  string last_updated_at_tx_hash = 5;
  optional uint64 expires_at_block_number = 6;
  optional string expires_at_timestamp = 7;
  optional uint64 expires_at_timestamp_sec = 8;
}

message StringAnnotation {
  string key = 1;
  string value = 2;
}

message NumericAnnotation {
  string key = 1;
  uint64 value = 2;
}

message StringAnnotationWithRelations {
  string key = 1;
  string value = 2;
  uint64 related_entities = 3;
}

message NumericAnnotationWithRelations {
  string key = 1;
  uint64 value = 2;
  uint64 related_entities = 3;
}

message FullEntity {
  string key = 1;
  optional string data = 2;
  optional uint64 data_size = 3;
  EntityStatus status = 4;

  repeated StringAnnotationWithRelations string_annotations = 5;
  repeated NumericAnnotationWithRelations numeric_annotations = 6;

  optional string created_at_tx_hash = 7;
  optional string created_at_operation_index = 8;
  optional uint64 created_at_block_number = 9;
  optional string created_at_timestamp = 10;

  optional uint64 expires_at_block_number = 11;
  optional string expires_at_timestamp = 12;

  optional string owner = 13;
  string gas_used = 14;
  string fees_paid = 15;

  string updated_at_tx_hash = 16;
  string updated_at_operation_index = 17;
  uint64 updated_at_block_number = 18;
  string updated_at_timestamp = 19;

  optional string expires_at_timestamp_sec = 20;
}

enum OperationType {
  CREATE = 0;
  UPDATE = 1;
  DELETE = 2;
  EXTEND = 3;
}

message Operation {
  string entity_key = 1;
  string sender = 2;
  OperationType operation = 3;
  optional string data = 4;
  optional uint64 btl = 5;
  string block_hash = 6;
  string transaction_hash = 7;
  uint64 index = 8;
  string gas_used = 9;
  string fees_paid = 10;
  uint64 block_number = 11;
}

message GetEntityHistoryResponse {
  repeated EntityHistoryEntry items = 1;
  Pagination pagination = 2;
}

message EntityHistoryEntry {
  string entity_key = 1;
  uint64 block_number = 2;
  string block_hash = 3;
  string transaction_hash = 4;
  uint64 tx_index = 5;
  uint64 op_index = 6;
  string block_timestamp = 7;
  string sender = 8;
  OperationType operation = 9;
  optional string btl = 10;
  optional string data = 11;
  optional string prev_data = 12;
  EntityStatus status = 13;
  optional string prev_status = 14;
  optional uint64 expires_at_block_number = 15;
  optional uint64 prev_expires_at_block_number = 16;
  string gas_used = 17;
  string fees_paid = 18;
  optional string expires_at_timestamp = 19;
  optional string prev_expires_at_timestamp = 20;
  optional uint64 expires_at_timestamp_sec = 21;
  optional uint64 prev_expires_at_timestamp_sec = 22;
}

message BlockStatsRequest {
  string block_number = 1;
}

message BlockStatsResponse {
  BlockStatsCounts counts = 1;
  BlockStatsStorage storage = 2;
}

message BlockStatsCounts {
  uint64 create_count = 1;
  uint64 update_count = 2;
  uint64 expire_count = 3;
  uint64 delete_count = 4;
  uint64 extend_count = 5;
}

message BlockStatsStorage {
  uint64 block_bytes = 1;
  uint64 total_bytes = 2;
}

message ListCustomContractTransactionsRequest {
  optional uint64 page = 1;
  optional uint64 page_size = 2;
}

message ListCustomContractTransactionsResponse {
  repeated Transaction items = 1;
  Pagination pagination = 2;
}

message Transaction {
  string hash = 1;
  string from_address_hash = 2;
  optional string to_address_hash = 3;
  optional uint64 status = 4;
  optional string block_hash = 5;
  optional uint64 block_number = 6;
  optional bool block_consensus = 7;
  optional uint64 index = 8;
  optional string cumulative_gas_used = 9;
  optional string gas_price = 10;
  optional string block_timestamp = 11;
  optional string error = 12;
  string value = 13;
  string input = 14;
  optional string created_contract_address_hash = 15;
  optional uint64 type = 16;
  optional string l1_transaction_origin = 17;
  optional uint64 l1_block_number = 18;
}

message AddressLeaderboardRanksRequest {
  string address = 1;
}

message AddressLeaderboardRanksResponse {
  uint64 biggest_spenders = 1;
  uint64 entities_created = 2;
  uint64 entities_owned = 3;
  uint64 data_owned = 4;
  uint64 top_accounts = 5;
}

// Charts

enum ChartResolution {
  DAY = 0;
  HOUR = 1;
  WEEK = 2;
  MONTH = 3;
}

message ChartInfo {
  string id = 1;
  string title = 2;
  string description = 3;
}

message ChartPoint {
  string date = 1;
  string date_to = 2;
  string value = 3;
}

message ChartResponse {
  repeated ChartPoint chart = 1;
  ChartInfo info = 2;
}

message ChartDataUsageRequest {
  optional string from = 1;
  optional string to = 2;
  ChartResolution resolution = 3;
}

message ChartStorageForecastRequest {
  string to = 1;
  ChartResolution resolution = 2;
}

message ChartOperationCountRequest {
  optional string from = 1;
  optional string to = 2;
  ChartResolution resolution = 3;
}

message ChartOperationCountResponse {
  repeated ChartPoint chart = 1;
  ChartInfo info = 2;
}

message GetEntityDataHistogramResponse {
  repeated EntityDataHistogram items = 1;
}

message EntityDataHistogram {
  uint64 bucket = 1;
  uint64 bin_start = 2;
  uint64 bin_end = 3;
  uint64 count = 4;
}

// Leaderboards
message LeaderboardBiggestSpendersResponse {
  repeated LeaderboardBiggestSpendersItem items = 1;
  Pagination pagination = 2;
}

message LeaderboardBiggestSpendersItem {
  uint64 rank = 1;
  string address = 2;
  string total_fees = 3;
}

message LeaderboardTopAccountsResponse {
  repeated LeaderboardTopAccountsItem items = 1;
  Pagination pagination = 2;
}

message LeaderboardTopAccountsItem {
  uint64 rank = 1;
  string address = 2;
  string balance = 3;
  string tx_count = 4;
}

message LeaderboardEntitiesCreatedResponse {
  repeated LeaderboardEntitiesCreatedItem items = 1;
  Pagination pagination = 2;
}

message LeaderboardEntitiesCreatedItem {
  uint64 rank = 1;
  string address = 2;
  uint64 entities_created_count = 3;
}

message LeaderboardEntitiesOwnedResponse {
  repeated LeaderboardEntitiesOwnedItem items = 1;
  Pagination pagination = 2;
}

message LeaderboardEntitiesOwnedItem {
  uint64 rank = 1;
  string address = 2;
  uint64 entities_count = 3;
}

message LeaderboardDataOwnedResponse {
  repeated LeaderboardDataOwnedItem items = 1;
  Pagination pagination = 2;
}

message LeaderboardDataOwnedItem {
  uint64 rank = 1;
  string address = 2;
  uint64 data_size = 3;
}

message LeaderboardLargestEntitiesResponse {
  repeated LeaderboardLargestEntitiesItem items = 1;
  Pagination pagination = 2;
}

message LeaderboardLargestEntitiesItem {
  uint64 rank = 1;
  string entity_key = 2;
  uint64 data_size = 3;
}

message LeaderboardEffectivelyLargestEntitiesResponse {
  repeated LeaderboardEffectivelyLargestEntitiesItem items = 1;
  Pagination pagination = 2;
}

message LeaderboardEffectivelyLargestEntitiesItem {
  uint64 rank = 1;
  string entity_key = 2;
  uint64 data_size = 3;
  uint64 lifespan = 4; // lifespan in blocks
}

message LeaderboardEntitiesByBtlResponse {
  repeated EntityWithExpTimestamp items = 1;
  Pagination pagination = 2;
}
